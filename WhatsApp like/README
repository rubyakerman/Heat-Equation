//............ Exersice 4: WhatsApp .......................//

FILES:
whatsappServer.cpp - the server unit.
whatsappClient.cpp - the client unit.

//........................ Q&A ...........................// 

1.1) we could support the required operation by adding new method to the sendUserCommand() method, 
which is responsible for taking care of each one of the user operation (such as create_group etc).
in addition we would create a specific method leave_group_command() that could take care of it & send
 the corresponding data to the server.

1.2) as before, we could support it by adding the new method to handle_client_input(). 
this way we would take care of updating the server's data-structures 
(clients_fds, groups_per_clients, clients_per_fds). this way we would remove the group in case we have to. 

2)Reliability - TCP is far more reliable, it makes sure the message arrived. 
we must it be reliable as we need the server to understand each and every situation.

Ordering of data packets - TCP rearranges data packets in the order specified. 
unordered packets can change the way the server would response and it is extremlly 
problematic if we will not have guarantee that the messages sent would rich at all.

Speed of transfer - TCP is a bit slower than UDP, since messaging by text is not heavy, 
it can be made by TCP, and it is not necessary to use UDP.

3) a media streaming app. it is not so important to lose few pixels from time to time,
but in the other side the streaming is a heavy one, so you must transfer the media as 
fast as you can. and UDP is faster.

a game app - as explained above, it is quit similar. games use a lot of height quality photos,
 hence it is most likely we would build a game app using UDP protocol.

4. in addition to the current design, each & every user would store inside his own device a backup file
 contains footprints of text-messages & time. This way in case the server is damaged everything can be restored
 by accessing this file.

